<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metaprogramming on Hyunmin Lee</title>
    <link>https://qpzm.github.io/tags/metaprogramming/</link>
    <description>Recent content in Metaprogramming on Hyunmin Lee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Sep 2019 12:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://qpzm.github.io/tags/metaprogramming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Book] Metaprogramming in Ruby 2</title>
      <link>https://qpzm.github.io/posts/metaprogramming_ruby/</link>
      <pubDate>Mon, 09 Sep 2019 12:00:00 +0900</pubDate>
      
      <guid>https://qpzm.github.io/posts/metaprogramming_ruby/</guid>
      <description>Paolo Perrotta의 Metaprogramming Ruby 2 를 읽으면서 메모한 내용입니다. 퀴즈 솔루션은 https://github.com/qpzm/metaprogramming_ruby 에 있습니다.
Ch2. The Object Model instance variable은 할당할 때 생긴다  Instance variables just spring into existence when you assign them a value, so you can have objects of the same class that carry different instance variables.
 instance methods An object’s methods live in the object’s class.
class vs module  a class is a module with three additional instance methods (new, allocate, and superclass)</description>
    </item>
    
  </channel>
</rss>